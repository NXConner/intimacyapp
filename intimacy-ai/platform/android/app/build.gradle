plugins { id 'com.android.application' id 'org.jetbrains.kotlin.android' }
android { namespace 'com.example.intimacyai'; compileSdk 34; defaultConfig { applicationId 'com.example.intimacyai'; minSdk 26; targetSdk 34; versionCode 1; versionName '1.0'; vectorDrawables { useSupportLibrary true } } buildFeatures { compose true } composeOptions { kotlinCompilerExtensionVersion '1.5.14' } compileOptions { sourceCompatibility JavaVersion.VERSION_17; targetCompatibility JavaVersion.VERSION_17 } kotlinOptions { jvmTarget = '17' } buildTypes { release { minifyEnabled true; shrinkResources true; proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro' } debug { minifyEnabled false } } packaging { resources { excludes += ['/META-INF/{AL2.0,LGPL2.1}','META-INF/DEPENDENCIES','META-INF/LICENSE','META-INF/LICENSE.txt','META-INF/license.txt','META-INF/NOTICE','META-INF/NOTICE.txt','META-INF/notice.txt','META-INF/ASL2.0'] } } splits { abi { enable true; reset(); include 'arm64-v8a','armeabi-v7a','x86_64'; universalApk false } } }
dependencies { implementation platform('androidx.compose:compose-bom:2024.09.01'); implementation 'androidx.compose.ui:ui'; implementation 'androidx.compose.material3:material3'; implementation 'androidx.activity:activity-compose:1.9.2'; implementation 'androidx.work:work-runtime-ktx:2.9.1'; implementation 'androidx.camera:camera-camera2:1.3.4'; implementation 'androidx.camera:camera-lifecycle:1.3.4'; implementation 'androidx.security:security-crypto:1.1.0-alpha06'; implementation 'com.squareup.okhttp3:okhttp:4.12.0'; implementation 'androidx.profileinstaller:profileinstaller:1.3.2' }

tasks.register('buildS22Release') {
  dependsOn 'assembleRelease'
  doLast {
    def apkDir = file("${buildDir}/outputs/apk/release")
    def arm64 = apkDir.exists() ? apkDir.listFiles()?.find { it.name.contains('arm64') && it.name.endsWith('.apk') } : null
    if (arm64 != null) {
      def outDir = file("${rootProject.projectDir}/dist")
      outDir.mkdirs()
      def outFile = new File(outDir, 'IntimacyAI-S22-arm64-v8a-release.apk')
      outFile.bytes = arm64.bytes
      println "APK copied to ${outFile.absolutePath}"
    } else {
      println "arm64-v8a APK not found in ${apkDir.absolutePath}. Run :app:assembleRelease first."
    }
  }
}
